name: DEV - Clash Of Heroes Deploy

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GAME_NAME: clash-of-heroes 
      BUILDER_TOKEN: ${{ secrets.BUILDER_TOKEN  }}
      HARBOR_PASSWORD: ${{ secrets.HARBOR_PASSWORD }}
      HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
          path: ClashOfHeroes
      - uses: actions/checkout@v2
        with:
          repository: Elysium-Studios/game-manager
          token: ${{ env.BUILDER_TOKEN }}
          path: game-manager
      - uses: actions/checkout@v2
        with:
          repository: Elysium-Studios/infrastructure
          token: ${{ env.BUILDER_TOKEN }}
          path: infrastructure
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmdtest ffmpeg

      - name: Get Godot
        uses: wei/wget@v1
        with:
          args: https://downloads.tuxfamily.org/godotengine/3.4.5/Godot_v3.4.5-stable_linux_headless.64.zip
      - run: | 
          unzip Godot_v3.4.5-stable_linux_headless.64.zip
      - name: Build ClashOfHeroes
        continue-on-error: true
        run: | 
          mkdir -p ClashOfHeroes/dist/audio; mkdir -p ClashOfHeroes/dist/translations && cp game-manager/scripts/* ClashOfHeroes/
          find ClashOfHeroes/Audio/ -name '*.wav' -exec cp {} ClashOfHeroes/dist/audio \;
          cd ClashOfHeroes/dist/audio && python3 ../../generate_audio_data.py && cd ../../..
          ./Godot_v3.4.5-stable_linux_headless.64 -export_pck --path ClashOfHeroes/;
          find ClashOfHeroes/*.pck -exec gzip -9 -n {} \; -exec mv {}.gz {} \;
      - name: Generate index.html
        run: |
          cd ClashOfHeroes && node generate_index.js cdn="https://elysium-games.s3.eu-west-1.amazonaws.com/" && mv index.html config.json dist/;
      - name: Get version
        id: tag
        run: |
          packageVersion=$(cat ClashOfHeroes/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]') && ((packageVersion++))
          sed -i -e "s/version\":.*/version\": \"${packageVersion}\"/g" ClashOfHeroes/package.json
          echo "::set-output name=new_tag::$packageVersion"
      - name: Build docker image and push to docker repo
        run: |
          docker login harbor.elysiumstudios.se -u ${{ env.HARBOR_USERNAME }} -p ${{ env.HARBOR_PASSWORD }}
          docker build -t "harbor.elysiumstudios.se/elysium/${{ env.GAME_NAME }}:${{ steps.tag.outputs.new_tag }}" -f ClashOfHeroes/Dockerfile2 ClashOfHeroes/
          docker push "harbor.elysiumstudios.se/elysium/${{ env.GAME_NAME }}:${{ steps.tag.outputs.new_tag }}"
      - uses: azure/setup-helm@v1
        with:
          version: "3.*"
        id: install

      - name: Update helm version and push to chart repo
        run: |
          cd ClashOfHeroes/
          sed -i -e 's/appVersion:.*/appVersion: '${{ steps.tag.outputs.new_tag }}'/g' -e 's/^version:.*/version: '${{ steps.tag.outputs.new_tag }}'/' charts/clash-of-heroes/Chart.yaml
          git config --global user.email "workflow@elysiumstudios.se"
          git config --global user.name "ClashOfHeroes Workflow"
          git add charts/clash-of-heroes/Chart.yaml package.json
          git commit -m "Deploy ClashOfHeroes ${{ steps.tag.outputs.new_tag }}"
          git push
          helm plugin install https://github.com/chartmuseum/helm-push.git
          helm repo add elysium-charts https://harbor.elysiumstudios.se/chartrepo/elysium/ --username=${{ env.HARBOR_USERNAME }} --password=${{ env.HARBOR_PASSWORD }} 
          helm cm-push charts/clash-of-heroes/ elysium-charts
          
      - name: Update ClashOfHeroes release in flux repo
        run: |
          cd infrastructure/
          sed -i -e 's/version:.*/version: "${{ steps.tag.outputs.new_tag }}"/g' dev/apps-infra/deployments/clash-of-heroes/release.yaml
          git config --global user.email "workflow@elysiumstudios.se"
          git config --global user.name "ClashOfHeroes Workflow"
          git add dev/apps-infra/deployments/clash-of-heroes/release.yaml
          git commit -m "Deploy ClashOfHeroes ${{ steps.tag.outputs.new_tag }}"
          git push
